/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Controlador.LogicaMetodos;
import java.awt.Dialog;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zapia
 */
public class LimpiezaPorFecha extends javax.swing.JDialog {

    private static SimpleDateFormat sdf = new SimpleDateFormat("dd/mm/aa");
    private File[] ficherosEscaneados;
    private LogicaMetodos logicaMetodos;
    private String rutaSeleccionada;
    private int opcionEscogida;

    /**
     * Creates new form LimpiezaPorFecha
     */
    public LimpiezaPorFecha(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public LimpiezaPorFecha(Dialog owner, boolean modal, LogicaMetodos logicaMetodos, String rutaSeleccionada) {
        super(owner, modal);
        initComponents();
        this.logicaMetodos = logicaMetodos;
        this.rutaSeleccionada = rutaSeleccionada;
    }

    private void rellenarTablaFicherosPorFecha() {
        String[] columnas = {"Fichero", "Ruta", "Peso(MB)", "Fecha de Modificación"};
        DefaultTableModel dtm = new DefaultTableModel(columnas, 0);
        for (File fichero : ficherosEscaneados) {
            String[] columnasInformacionDeFichero = new String[4];
            columnasInformacionDeFichero[0] = fichero.getName();
            columnasInformacionDeFichero[1] = fichero.getAbsolutePath();
            columnasInformacionDeFichero[2] = Long.toString(fichero.length() / 1048576);
            Date fechaFichero = new Date(fichero.lastModified());
            columnasInformacionDeFichero[3] = fechaFichero.toString();
            dtm.addRow(columnasInformacionDeFichero);
        }
        jTableFecha.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelTiempo = new javax.swing.JLabel();
        jComboBoxFecha = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFecha = new javax.swing.JTable();
        jButtonCerrar = new javax.swing.JButton();
        jButtonBorrarSeleccionados = new javax.swing.JButton();
        jButtonBorrarTodo = new javax.swing.JButton();
        jButtonEscanear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Limpieza por Fecha");

        jLabelTiempo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelTiempo.setText("Ficheros de hace:");

        jComboBoxFecha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<3 meses", "<6 meses", "<1 año" }));

        jTableFecha.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Ruta", "Peso", "Fecha de Modificación"
            }
        ));
        jScrollPane1.setViewportView(jTableFecha);

        jButtonCerrar.setText("Cerrar");
        jButtonCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarActionPerformed(evt);
            }
        });

        jButtonBorrarSeleccionados.setText("Borrar seleccionados");
        jButtonBorrarSeleccionados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarSeleccionadosActionPerformed(evt);
            }
        });

        jButtonBorrarTodo.setText("Borrar todo");
        jButtonBorrarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarTodoActionPerformed(evt);
            }
        });

        jButtonEscanear.setText("Escanear");
        jButtonEscanear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEscanearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabelTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonEscanear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(208, 208, 208)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBorrarTodo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBorrarSeleccionados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(189, 189, 189))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(249, 249, 249))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelTiempo)
                            .addComponent(jComboBoxFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonEscanear))
                        .addGap(146, 146, 146)))
                .addGap(18, 18, 18)
                .addComponent(jButtonBorrarTodo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBorrarSeleccionados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCerrar)
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCerrarActionPerformed

    private void jButtonEscanearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEscanearActionPerformed

        opcionEscogida = jComboBoxFecha.getSelectedIndex();
        List<File> coleccionFicheros = new ArrayList<File>();
        coleccionFicheros = logicaMetodos.listarFicherosPorFechaRecursivamente(jComboBoxFecha.getSelectedIndex(), rutaSeleccionada);
        ficherosEscaneados = coleccionFicheros.toArray(new File[coleccionFicheros.size()]);
        JOptionPane.showMessageDialog(this, "Escaneo completado");
        rellenarTablaFicherosPorFecha();
    }//GEN-LAST:event_jButtonEscanearActionPerformed

    private void jButtonBorrarSeleccionadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarSeleccionadosActionPerformed
        int valor = JOptionPane.showConfirmDialog(this, "¿Desea eliminar los ficheros seleccionados?", "Eliminar ficheros seleccionados", JOptionPane.YES_NO_OPTION);
        if (valor == JOptionPane.YES_OPTION) {
            List<File> coleccionFicheros = new ArrayList<File>();
            int[] intFicherosSeleccionados = jTableFecha.getSelectedRows();
            File[] ficherosSeleccionados = new File[intFicherosSeleccionados.length];
            for (int contadorFicherosArray = 0; contadorFicherosArray < ficherosSeleccionados.length; contadorFicherosArray++) {
                ficherosSeleccionados[contadorFicherosArray] = ficherosEscaneados[intFicherosSeleccionados[contadorFicherosArray]];
            }
            logicaMetodos.borradoDeFicheros(ficherosSeleccionados, "FicherosBorrados.csv");

            System.out.println("------------------------------");
            JOptionPane.showMessageDialog(this, "Ficheros borrados");
            coleccionFicheros = logicaMetodos.listarFicherosPorFechaRecursivamente(jComboBoxFecha.getSelectedIndex(), rutaSeleccionada);
            ficherosEscaneados = coleccionFicheros.toArray(new File[coleccionFicheros.size()]);
            rellenarTablaFicherosPorFecha();
        }
    }//GEN-LAST:event_jButtonBorrarSeleccionadosActionPerformed

    private void jButtonBorrarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarTodoActionPerformed
        int valor = JOptionPane.showConfirmDialog(this, "¿Desea eliminar todos los ficheros?", "Eliminar ficheros", JOptionPane.YES_NO_OPTION);
        if (valor == JOptionPane.YES_OPTION) {
            List<File> coleccionFicheros = new ArrayList<File>();
            logicaMetodos.borradoDeFicheros(ficherosEscaneados, "FicherosBorrados.csv");
            System.out.println("------------------------------");
            JOptionPane.showMessageDialog(this, "Ficheros borrados");
            coleccionFicheros = logicaMetodos.listarFicherosPorFechaRecursivamente(jComboBoxFecha.getSelectedIndex(), rutaSeleccionada);
            ficherosEscaneados = coleccionFicheros.toArray(new File[coleccionFicheros.size()]);
            rellenarTablaFicherosPorFecha();
        }
    }//GEN-LAST:event_jButtonBorrarTodoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrarSeleccionados;
    private javax.swing.JButton jButtonBorrarTodo;
    private javax.swing.JButton jButtonCerrar;
    private javax.swing.JButton jButtonEscanear;
    private javax.swing.JComboBox<String> jComboBoxFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTiempo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableFecha;
    // End of variables declaration//GEN-END:variables
}
